{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/myPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/myPosts.jsx","components/Profile/myPosts/myPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likeCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","map","likesCount","postPhoto","id","myPostsBlock","formData","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileDataFormReduxForm","profile","error","createField","Input","type","Object","keys","contacts","key","style","formSummaryError","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfo","photos","large","userPhoto","mainPhoto","target","files","length","descriptionBlock","initialValues","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d4e5db2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__205bj\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3AwYs\",\"mainPhoto\":\"ProfileInfo_mainPhoto__13b1I\",\"contacts\":\"ProfileInfo_contacts__3RRsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"myPosts_myPostsBlock__TtKEC\",\"posts\":\"myPosts_posts__10skA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__FVuvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"Profile_profilePage__1z4ZQ\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\n\r\n//###need fix. Upload not just photo but photo from API\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {/*props.postPhoto*/}\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls.js';\r\nimport s from './myPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postsElements = props.posts\r\n        .map(posts => <Post message={posts.message} likeCount={posts.likesCount} key={posts.id} postPhoto={props.postPhoto} />);\r\n\r\n    const onSubmit = (formData) =>{\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n        <div>\r\n            <Field component={Textarea} name={\"newPostText\"} \r\n                placeholder={\"Enter your post text\"} validate={[required, maxLength10]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form:\"profileAddPostForm\"})(AddPostForm)\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './myPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        //postPhoto: state\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode= () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange=(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n            <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b> <span  onDoubleClick={activateEditMode} >{props.status || \"------\"}</span>\r\n                </div>}\r\n                {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} \r\n                    value={status} onChange={onStatusChange} />\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import { reduxForm } from \"redux-form\"\r\nimport { createField, Input, Textarea } from \"../../Common/FormsControls/FormsControls\"\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    debugger\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <b>Full name:</b> {createField(\"FullName\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b> {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div className={s.contacts} key={key} >\r\n                        <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n            {error && <div className={style.formSummaryError} >\r\n                {error}\r\n            </div>}\r\n            <div><button>Save</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/userPhoto.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(()=>{\r\n        setEditMode(false)});\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact contactTitle={key} contactValue={profile.contacts[key]} key={key} />\r\n                })}\r\n            </div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contacts}>\r\n            <b>{contactTitle}: {contactValue} </b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './myPosts/myPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} \r\n            profile={props.profile} status={props.status} \r\n            updateStatus={props.updateStatus} \r\n            savePhoto={props.savePhoto} />\r\n            <div className=\"myPosts\">\r\n                <MyPostsContainer  />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId ){\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} \r\n            profile={this.props.profile} status={this.props.status} \r\n            updateStatus = {this.props.updateStatus} savePhoto ={this.props.savePhoto} />\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }   \r\n        ),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}