{"version":3,"sources":["components/Dialogs/Message/Message.tsx","components/Dialogs/Message/Message.module.css","pages/Chat/ChatPage.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Message","React","memo","props","className","s","message","src","chatMessage","photo","avatar","userName","module","exports","Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","Messages","obj","TypeError","messages","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","current","scrollIntoView","behavior","style","height","overflowY","onScroll","e","element","currentTarget","scrollHeight","scrollTop","clientHeight","map","m","id","ref","AddMessagesForm","setMessage","onChange","value","disabled","onClick","sendMessage","ChatPage"],"mappings":"mJAUMA,EAA+BC,IAAMC,MAAK,SAACC,GAAW,IAAD,MAEvD,OACA,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKC,IAAG,UAAEJ,EAAMK,mBAAR,aAAE,EAAmBC,MAAOL,UAAWC,IAAEK,SADrD,IACgE,sCAAIP,EAAMK,mBAAV,aAAI,EAAmBG,WACnF,yBACGR,EAAMG,SAAWH,EAAMG,SACxBH,EAAMG,UAAP,UAAkBH,EAAMK,mBAAxB,aAAkB,EAAmBF,SAEtC,6BAMON,O,oBCxBfY,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,iGCiBxDC,EAAiB,WACnB,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,UAM/D,OALAI,qBAAU,WAEV,OADIN,EAASO,eACN,WAAOP,EAASQ,kBACrB,IAGE,gCACgB,UAAXN,GACE,+EACH,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,WAOVO,EAAyB,SAAC,ICvCjB,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDsCC,IACpC,IAAMC,EAAWT,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKO,YAC3DC,EAAoBC,iBAAuB,MAFd,EAGKC,oBAAS,GAHd,mBAG5BC,EAH4B,KAGdC,EAHc,KAqBnC,OANAX,qBAAU,WACY,IAAD,EAAdU,IACC,UAAAH,EAAkBK,eAAlB,SAA2BC,eAAe,CAACC,SAAU,cAE1D,CAACR,IAGA,sBAAKS,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAASC,SAjBjC,SAACC,GACnB,IAAMC,EAAUD,EAAEE,cACbD,EAAQE,aAAeF,EAAQG,YAAcH,EAAQI,cAErDd,GAAgBC,GAAgB,GAEjCD,GAAgBC,GAAgB,IAWpC,UACKL,EAASmB,KAAI,SAACC,GAAD,OAAO,cAAC/C,EAAA,EAAD,CAAoBQ,YAAauC,GAAnBA,EAAEC,OACrC,qBAAKC,IAAKrB,QAQhBsB,EAAgC,WAAO,IAAD,EACVpB,mBAAS,IADC,mBACjCxB,EADiC,KACxB6C,EADwB,KAElCpC,EAAWC,cACXC,EAASC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,UAU/D,OACI,gCACI,8BACI,0BAAUmC,SAAU,SAACZ,GAAD,OAAMW,EAAWX,EAAEE,cAAcW,QAAQA,MAAQ/C,MAEzE,8BACI,wBAAQgD,SAAqB,UAAXrC,EAAoBsC,QAbvB,WACnBjD,IAGJS,EAASyC,YAAYlD,IACrB6C,EAAW,MAQH,wBAODM,UAvFY,WACvB,OACI,8BACI,cAAC,EAAD","file":"static/js/5.c4f628e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ChatMessageAPIType } from '../../../api/chat-api';\r\nimport s from \"./Message.module.css\"\r\n\r\n\r\n\r\ntype PropsType = {\r\n    message?: string\r\n    chatMessage?: ChatMessageAPIType\r\n}\r\nconst Message: React.FC<PropsType> = React.memo((props) => {\r\n    \r\n    return (\r\n    <div className={s.message}>\r\n        <img src={props.chatMessage?.photo} className={s.avatar} /> <b>{props.chatMessage?.userName}</b>\r\n        <br/>\r\n        {!!props.message && props.message }\r\n        {!props.message && props.chatMessage?.message}\r\n        \r\n        <hr/>\r\n    </div>\r\n    )\r\n})\r\n\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__uNlBl\",\"avatar\":\"Message_avatar__1X8Yo\"};","import React, { useEffect, useRef, useState }  from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Dialogs/Message/Message'\r\nimport { sendMessage, startMessagesListening, stopMessagesListening } from '../../redux/chat-reducer'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\n\r\n\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return(\r\n        <div>\r\n            <Chat />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n    useEffect(()=>{\r\n        dispatch(startMessagesListening())\r\n    return () => {dispatch(stopMessagesListening())}\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {status === 'error' \r\n            && <div>Some error occured. Please refresh the page </div> }\r\n            <> \r\n                <Messages />\r\n                <AddMessagesForm />\r\n            </>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent >) => {\r\n        const element = e.currentTarget;\r\n        if ((element.scrollHeight - element.scrollTop === element.clientHeight))\r\n        {\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n        } else { \r\n            isAutoScroll && setIsAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    } ,[messages])\r\n\r\n    return(\r\n        <div style={{ height: '615px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n            {messages.map((m) => <Message key={m.id} chatMessage={m} />)}\r\n            <div ref={messagesAnchorRef}></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMessagesForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () =>{\r\n        if(!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <textarea onChange={(e)=> setMessage(e.currentTarget.value)} value ={message}></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatPage","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}