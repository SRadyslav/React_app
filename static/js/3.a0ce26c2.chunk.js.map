{"version":3,"sources":["components/Profile/myPosts/myPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/myPosts.jsx","components/Profile/myPosts/myPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likeCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","console","log","postsElements","posts","map","likesCount","id","myPostsBlock","formData","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","profileInfo","photos","large","descriptionBlock","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a0ce26c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"myPosts_myPostsBlock__TtKEC\",\"posts\":\"myPosts_posts__10skA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__FVuvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"Profile_profilePage__1z4ZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__205bj\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3AwYs\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls.js';\r\nimport s from './myPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    console.log(\"render\")\r\n    let postsElements = props.posts\r\n        .map(posts => <Post message={posts.message} likeCount={posts.likesCount} key={posts.id} />);\r\n\r\n    const onSubmit = (formData) =>{\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n        <div>\r\n            <Field component={Textarea} name={\"newPostText\"} \r\n                placeholder={\"Enter your post text\"} validate={[required, maxLength10]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form:\"profileAddPostForm\"})(AddPostForm)\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './myPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode= () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange=(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n            <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span  onDoubleClick={activateEditMode} >{props.status || \"------\"}</span>\r\n                </div>}\r\n                {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} \r\n                    value={status} onChange={onStatusChange} />\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    else return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img src={profile.photos.large} />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            description\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './myPosts/myPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <ProfileInfo  profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <div className=\"myPosts\">\r\n            <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus = {this.props.updateStatus} />\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }   \r\n        ),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}