{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","isAuth","dialogsItems","inputBlock","formData","sendMessageActionCreator","newMessageText","compose","connect","dispatch","withAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,WAAa,8B,oBCApJD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,qHCcbC,EAVI,SAACC,GAChB,IAAIC,EAAM,aAAcD,EAAME,GAC9B,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACY,eAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,OAAtC,cAAgDR,EAAMS,KAAtD,U,kBCMLC,EAXC,SAACV,GACb,OACA,qBAAKG,UAAWC,IAAEO,QAAlB,SACI,8BACKX,EAAMW,a,yCCHbC,EAAcC,YAAiB,IAWtBC,cAAU,CAACC,KAAK,wBAAhBD,EATe,SAACd,GAC3B,OACI,uBAAOgB,SAAUhB,EAAMiB,aAAvB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcH,KAAM,iBAAkBc,YAAa,uBAChG,gDC2BDC,EA/BC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMP,GAAIG,EAAOH,IAASG,EAAOH,OAEzE4B,EAAmBL,EAAMM,SACxBF,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQT,OAKhE,OAAKF,EAAMgC,OAEX,sBAAK7B,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE6B,aAAlB,SACKN,IAEL,qBAAKxB,UAAWC,IAAE2B,SAAlB,SACI,gCAAMD,EAAN,SAGJ,qBAAK3B,UAAWC,IAAE8B,WAAlB,SACA,cAAC,EAAD,CAAqBlB,SAdZ,SAACmB,GACdnC,EAAMoC,yBAAyBD,EAASE,wBAEd,cAAC,IAAD,CAAU/B,GAAI,Y,gBCMjCgC,sBACXC,aAhBkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBW,eAAgBZ,EAAMC,YAAYW,mBAIjB,SAACG,GACtB,MAAO,CACHJ,yBAA0B,SAACC,GACvBG,EAASJ,YAAyBC,SAO1CI,IAFWH,CAGbd","file":"static/js/4.c169255f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__13Stm\",\"dialogsItems\":\"Dialogs_dialogsItems__2F_XI\",\"messages\":\"Dialogs_messages__dfQ9m\",\"inputBlock\":\"Dialogs_inputBlock__SLgls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1d3g2\",\"active\":\"DialogItem_active__1MTTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__uNlBl\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path= \"/dialogs/1\" +props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n                    <NavLink to={path} activeClassName={s.active}> {props.name} </NavLink>\r\n                </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./Message.module.css\"\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nexport const AddMessageForm = (props) => {\r\n    return(\r\n        <form  onSubmit={props.handleSubmit}  >\r\n            <Field component={Textarea} validate={[required, maxLength50]} name={\"newMessageText\"} placeholder={\"Enter your message\"} />\r\n                <button >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageFormRedux from \"./Message/AddMessageForm\"\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />);\r\n\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} key={message.id} />);\r\n\r\n    const onSubmit = (formData) =>{\r\n        props.sendMessageActionCreator(formData.newMessageText);\r\n    }\r\n        if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements} </div>\r\n                \r\n            </div>\r\n            <div className={s.inputBlock}>\r\n            <AddMessageFormRedux onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageActionCreator: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}