[{"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Video\\Video.jsx":"1","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Preloader\\Preloader.js":"2","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\index.js":"3","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\App.js":"4","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\redux-store.js":"5","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withSuspense.js":"6","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\NavBar\\NavBar.jsx":"7","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\News.jsx":"8","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Music\\Music.jsx":"9","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\UsersContainer.jsx":"10","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Settings\\Settings.jsx":"11","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\HeaderContainer.jsx":"12","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogsContainer.jsx":"13","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileContainer.jsx":"14","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Login\\Login.jsx":"15","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-selectors.js":"16","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withAuthRedirect.js":"17","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\object-helpers.js":"18","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\api.js":"19","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\FormsControls\\FormsControls.js":"20","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\validators\\validators.js":"21","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\Users.jsx":"22","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\Header.jsx":"23","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Dialogs.jsx":"24","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\Profile.jsx":"25","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\newNews\\newNews.jsx":"26","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\User.jsx":"27","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Pagination\\Pagination.jsx":"28","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\AddMessageForm.jsx":"29","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"30","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\Message.jsx":"31","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPostsContainer.jsx":"32","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"33","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"34","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"35","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPosts.jsx":"36","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\Post\\Post.jsx":"37","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\app-reducer.ts":"38","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\auth-reducer.ts":"39","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\dialogs-reducer.ts":"40","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\profile-reducer.ts":"41","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\sidebar-reducer.ts":"42","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-reducer.ts":"43"},{"size":304,"mtime":1609686598716,"results":"44","hashOfConfig":"45"},{"size":184,"mtime":1611062680855,"results":"46","hashOfConfig":"45"},{"size":259,"mtime":1612610835988,"results":"47","hashOfConfig":"45"},{"size":3137,"mtime":1612610824099,"results":"48","hashOfConfig":"45"},{"size":997,"mtime":1612610772600,"results":"49","hashOfConfig":"45"},{"size":300,"mtime":1612611281426,"results":"50","hashOfConfig":"45"},{"size":1144,"mtime":1612610985393,"results":"51","hashOfConfig":"45"},{"size":423,"mtime":1612610964427,"results":"52","hashOfConfig":"45"},{"size":304,"mtime":1612610993416,"results":"53","hashOfConfig":"45"},{"size":1974,"mtime":1612610928315,"results":"54","hashOfConfig":"45"},{"size":578,"mtime":1612610949713,"results":"55","hashOfConfig":"45"},{"size":460,"mtime":1612611004722,"results":"56","hashOfConfig":"45"},{"size":755,"mtime":1612611012980,"results":"57","hashOfConfig":"45"},{"size":1655,"mtime":1612611202218,"results":"58","hashOfConfig":"45"},{"size":1780,"mtime":1612610322169,"results":"59","hashOfConfig":"45"},{"size":705,"mtime":1612610792261,"results":"60","hashOfConfig":"45"},{"size":627,"mtime":1612611278088,"results":"61","hashOfConfig":"45"},{"size":217,"mtime":1612610799940,"results":"62","hashOfConfig":"45"},{"size":1785,"mtime":1612611099703,"results":"63","hashOfConfig":"45"},{"size":1082,"mtime":1612611255045,"results":"64","hashOfConfig":"45"},{"size":274,"mtime":1612610803790,"results":"65","hashOfConfig":"45"},{"size":686,"mtime":1612610932151,"results":"66","hashOfConfig":"45"},{"size":606,"mtime":1612611001477,"results":"67","hashOfConfig":"45"},{"size":1222,"mtime":1612611017741,"results":"68","hashOfConfig":"45"},{"size":659,"mtime":1612611196779,"results":"69","hashOfConfig":"45"},{"size":435,"mtime":1612610972804,"results":"70","hashOfConfig":"45"},{"size":1443,"mtime":1612610935086,"results":"71","hashOfConfig":"45"},{"size":1453,"mtime":1612611058564,"results":"72","hashOfConfig":"45"},{"size":662,"mtime":1612611022693,"results":"73","hashOfConfig":"45"},{"size":394,"mtime":1612611041380,"results":"74","hashOfConfig":"45"},{"size":256,"mtime":1612611026080,"results":"75","hashOfConfig":"45"},{"size":653,"mtime":1612611153087,"results":"76","hashOfConfig":"45"},{"size":2667,"mtime":1612611168371,"results":"77","hashOfConfig":"45"},{"size":1584,"mtime":1612611165163,"results":"78","hashOfConfig":"45"},{"size":1085,"mtime":1612611182687,"results":"79","hashOfConfig":"45"},{"size":1403,"mtime":1612610309408,"results":"80","hashOfConfig":"45"},{"size":522,"mtime":1612611136834,"results":"81","hashOfConfig":"45"},{"size":1058,"mtime":1612612765042,"results":"82","hashOfConfig":"45"},{"size":3099,"mtime":1612618524036,"results":"83","hashOfConfig":"45"},{"size":1447,"mtime":1612619608554,"results":"84","hashOfConfig":"45"},{"size":4612,"mtime":1612623069993,"results":"85","hashOfConfig":"45"},{"size":298,"mtime":1612622313462,"results":"86","hashOfConfig":"45"},{"size":5391,"mtime":1612624445474,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"odjy5u",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"176"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Video\\Video.jsx",[],["189","190"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Preloader\\Preloader.js",["191"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = () => {\r\nreturn(<img src={preloader} /> )\r\n}\r\n\r\nexport default Preloader;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\index.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\App.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\redux-store.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withSuspense.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\NavBar\\NavBar.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\News.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Music\\Music.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\UsersContainer.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Settings\\Settings.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\HeaderContainer.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogsContainer.jsx",["192"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageActionCreator: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileContainer.jsx",["193"],"import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId ){\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} \r\n            profile={this.props.profile} status={this.props.status} \r\n            updateStatus = {this.props.updateStatus} savePhoto ={this.props.savePhoto} />\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }   \r\n        ),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Login\\Login.jsx",["194"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../Common/FormsControls/FormsControls\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            {error && <div className={s.formSummaryError} >\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps,{login})(Login);\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-selectors.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withAuthRedirect.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\object-helpers.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\api.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\FormsControls\\FormsControls.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\validators\\validators.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\Users.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\Header.jsx",["195"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://pngimg.com/uploads/circle/circle_PNG50.png' />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                    ? <div>{props.login} <button onClick={props.logout} >Log out</button> </div>\r\n                    : <NavLink className={s.navLink} to=\"/login\" >Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header; ","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\Profile.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\newNews\\newNews.jsx",["196"],"import React from 'react';\r\nimport s from './newNews.module.css';\r\n\r\nconst NewNews = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewNews;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\User.jsx",["197"],"import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport userPhoto from \"../../assets/images/userPhoto.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, ...props}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + user.id}>\r\n                        <img className={s.usersImg} src={user.photos.small != null ? user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { props.unfollow(user.id); }} >\r\n                            Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { props.follow(user.id); }} >\r\n                            Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.city\"}</div>\r\n                    <div>{\"user.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Pagination\\Pagination.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\AddMessageForm.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPostsContainer.jsx",["198"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './myPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        //postPhoto: state\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["199"],"import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/userPhoto.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(()=>{\r\n        setEditMode(false)});\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact contactTitle={key} contactValue={profile.contacts[key]} key={key} />\r\n                })}\r\n            </div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contacts}>\r\n            <b>{contactTitle}: {contactValue} </b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPosts.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\Post\\Post.jsx",["200"],"import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\n\r\n//###need fix. Upload not just photo but photo from API\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {/*props.postPhoto*/}\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;",["201","202"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\app-reducer.ts",[],["203","204"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\auth-reducer.ts",["205"],"import { type } from 'os';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { authAPI, securityAPI } from '../api/api';\r\n\r\n\r\nconst SET_USER_DATA = \"first-network/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"first-network/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n//const TOGGLE_IS_FETCHING = \"first-network/auth/TOGGLE_IS_FETCHING\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null  //if null, then captcha is not required\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action: SetAuthDataType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetAuthDataPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n} | {\r\n    captcha: string\r\n}\r\n\r\ntype SetAuthDataType = {\r\n    type: typeof SET_USER_DATA | typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: SetAuthDataPayloadType \r\n}\r\n\r\nexport const setAuthUserData = (userId:number| null, email: string| null, login: string| null, isAuth: boolean): SetAuthDataType  => ({\r\n    type: SET_USER_DATA,\r\n    payload: { userId, email, login, isAuth }\r\n})\r\nexport const getCaptchaUrlSuccess = (captcha: string): SetAuthDataType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captcha} \r\n})\r\n// export const toggleIsFetching = (isFetching) => ({\r\n//     type: TOGGLE_IS_FETCHING,\r\n//     isFetching,\r\n// })\r\n\r\nexport const getAuthUserData = () => async (dispatch:any) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch:any) => {\r\n\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    }\r\n\r\n    else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some Error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch:any) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch:any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\dialogs-reducer.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\profile-reducer.ts",["206","207"],"import { profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport {PostsType, ProfilePhotoType, ContactsType, ProfileType} from \"../utils/types\"\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE-PHOTO-SUCCESS\";\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hey, how are you?\", likesCount: 23 },\r\n        { id: 2, message: \"it's my first post\", likesCount: 9 },\r\n        { id: 3, message: \"I'm so boring\", likesCount: 44 },\r\n        { id: 4, message: \"today i do some cool stuff\", likesCount: 53 },\r\n        { id: 5, message: \"Adorable dog\", likesCount: 109 }\r\n    ] as Array<PostsType>, \r\n    profile: null as ProfileType | null,\r\n    status: \"\" as string,\r\n    newPostText: ''\r\n};\r\ntype profileReducerActionType = addPostActionCreatorType | savePhotoSuccessActionType |\r\nsetUserProfileActionType | setStatusActionType | deletePostActionType\r\n\r\nconst profileReducer = (state = initialState, action:profileReducerActionType):InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype addPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText:string):addPostActionCreatorType => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n})\r\n\r\ntype setUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n} \r\nexport const setUserProfile = (profile:ProfileType):setUserProfileActionType => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n})\r\ntype setStatusActionType = {type: typeof SET_STATUS\r\n    status: string}\r\nexport const setStatus = (status:string):setStatusActionType => ({\r\n    type: SET_STATUS,\r\n    status,\r\n})\r\ntype deletePostActionType = {type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId:number):deletePostActionType => ({\r\n    type: DELETE_POST,\r\n    postId,\r\n})\r\ntype savePhotoSuccessActionType = {type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: ProfilePhotoType}\r\nexport const savePhotoSuccess = (photos:ProfilePhotoType):savePhotoSuccessActionType => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos,\r\n})\r\n\r\n\r\nexport const getStatus = (userId:number) => async (dispatch:any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status:string) => async (dispatch:any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file:any) => async (dispatch:any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile:ProfileType) => async (dispatch:any, getState:any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport const getUserProfile = (userId:number) => async (dispatch:any) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\nexport default profileReducer;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\sidebar-reducer.ts",["208","209"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-reducer.ts",["210","211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":6,"column":8,"nodeType":"218","endLine":6,"endColumn":31},{"ruleId":"219","severity":1,"message":"220","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":29,"column":43,"nodeType":"225","messageId":"226","endLine":29,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":32,"column":24,"nodeType":"218","endLine":32,"endColumn":48},{"ruleId":"216","severity":1,"message":"217","line":8,"column":13,"nodeType":"218","endLine":8,"endColumn":77},{"ruleId":"216","severity":1,"message":"217","line":7,"column":13,"nodeType":"218","endLine":7,"endColumn":109},{"ruleId":"216","severity":1,"message":"217","line":13,"column":25,"nodeType":"218","endLine":13,"endColumn":119},{"ruleId":"219","severity":1,"message":"220","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":29,"column":17,"nodeType":"218","endLine":29,"endColumn":88},{"ruleId":"216","severity":1,"message":"217","line":10,"column":13,"nodeType":"218","endLine":10,"endColumn":109},{"ruleId":"212","replacedBy":"227"},{"ruleId":"214","replacedBy":"228"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"229","severity":1,"message":"230","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":14},{"ruleId":"229","severity":1,"message":"231","line":3,"column":38,"nodeType":"221","messageId":"222","endLine":3,"endColumn":50},{"ruleId":"223","severity":1,"message":"224","line":61,"column":53,"nodeType":"225","messageId":"226","endLine":61,"endColumn":55},{"ruleId":"229","severity":1,"message":"232","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"229","severity":1,"message":"233","line":3,"column":6,"nodeType":"221","messageId":"222","endLine":3,"endColumn":22},{"ruleId":"229","severity":1,"message":"234","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":67,"column":64,"nodeType":"225","messageId":"226","endLine":67,"endColumn":66},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["235"],["236"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","'ContactsType' is defined but never used.","'act' is defined but never used.","'InitialStateType' is defined but never used.","'ProfilePhotoType' is defined but never used.","no-global-assign","no-unsafe-negation"]