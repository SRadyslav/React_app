[{"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Video\\Video.jsx":"1","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Preloader\\Preloader.js":"2","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\index.js":"3","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\App.js":"4","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withSuspense.js":"5","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\NavBar\\NavBar.jsx":"6","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\News.jsx":"7","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Music\\Music.jsx":"8","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Settings\\Settings.jsx":"9","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\HeaderContainer.jsx":"10","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogsContainer.jsx":"11","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileContainer.jsx":"12","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withAuthRedirect.js":"13","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\object-helpers.js":"14","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\Header.jsx":"15","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Dialogs.jsx":"16","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\Profile.jsx":"17","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\newNews\\newNews.jsx":"18","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\User.jsx":"19","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\AddMessageForm.jsx":"20","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"21","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\Message.jsx":"22","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPostsContainer.jsx":"23","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"24","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"25","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"26","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPosts.jsx":"27","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\Post\\Post.jsx":"28","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\app-reducer.ts":"29","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\auth-reducer.ts":"30","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\dialogs-reducer.ts":"31","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\profile-reducer.ts":"32","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\sidebar-reducer.ts":"33","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-reducer.ts":"34","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Pagination\\Pagination.tsx":"35","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\Users.tsx":"36","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\redux-store.ts":"37","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\UsersContainer.tsx":"38","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-selectors.ts":"39","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\api.ts":"40","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Login\\Login.tsx":"41","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\validators\\validators.ts":"42","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\FormsControls\\FormsControls.tsx":"43","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\auth-api.ts":"44","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\security-api.ts":"45","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\profile-api.ts":"46","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\users-api.ts":"47"},{"size":304,"mtime":1609686598716,"results":"48","hashOfConfig":"49"},{"size":184,"mtime":1611062680855,"results":"50","hashOfConfig":"49"},{"size":259,"mtime":1612610835988,"results":"51","hashOfConfig":"49"},{"size":3160,"mtime":1612772911854,"results":"52","hashOfConfig":"49"},{"size":300,"mtime":1612611281426,"results":"53","hashOfConfig":"49"},{"size":1144,"mtime":1612610985393,"results":"54","hashOfConfig":"49"},{"size":423,"mtime":1612610964427,"results":"55","hashOfConfig":"49"},{"size":304,"mtime":1612610993416,"results":"56","hashOfConfig":"49"},{"size":578,"mtime":1612610949713,"results":"57","hashOfConfig":"49"},{"size":460,"mtime":1612611004722,"results":"58","hashOfConfig":"49"},{"size":746,"mtime":1612960984403,"results":"59","hashOfConfig":"49"},{"size":1655,"mtime":1612611202218,"results":"60","hashOfConfig":"49"},{"size":627,"mtime":1612611278088,"results":"61","hashOfConfig":"49"},{"size":217,"mtime":1612610799940,"results":"62","hashOfConfig":"49"},{"size":606,"mtime":1612611001477,"results":"63","hashOfConfig":"49"},{"size":1222,"mtime":1612611017741,"results":"64","hashOfConfig":"49"},{"size":659,"mtime":1612611196779,"results":"65","hashOfConfig":"49"},{"size":435,"mtime":1612610972804,"results":"66","hashOfConfig":"49"},{"size":1443,"mtime":1612610935086,"results":"67","hashOfConfig":"49"},{"size":662,"mtime":1612611022693,"results":"68","hashOfConfig":"49"},{"size":394,"mtime":1612611041380,"results":"69","hashOfConfig":"49"},{"size":256,"mtime":1612611026080,"results":"70","hashOfConfig":"49"},{"size":648,"mtime":1612962462539,"results":"71","hashOfConfig":"49"},{"size":2667,"mtime":1612611168371,"results":"72","hashOfConfig":"49"},{"size":1570,"mtime":1612798225813,"results":"73","hashOfConfig":"49"},{"size":1085,"mtime":1612611182687,"results":"74","hashOfConfig":"49"},{"size":1400,"mtime":1612811067906,"results":"75","hashOfConfig":"49"},{"size":522,"mtime":1612611136834,"results":"76","hashOfConfig":"49"},{"size":1024,"mtime":1612961436545,"results":"77","hashOfConfig":"49"},{"size":2840,"mtime":1612964041279,"results":"78","hashOfConfig":"49"},{"size":1456,"mtime":1612961451821,"results":"79","hashOfConfig":"49"},{"size":4038,"mtime":1612963991093,"results":"80","hashOfConfig":"49"},{"size":260,"mtime":1612961506228,"results":"81","hashOfConfig":"49"},{"size":4422,"mtime":1612965765866,"results":"82","hashOfConfig":"49"},{"size":1659,"mtime":1612778787983,"results":"83","hashOfConfig":"49"},{"size":1026,"mtime":1612778198976,"results":"84","hashOfConfig":"49"},{"size":1508,"mtime":1612957144954,"results":"85","hashOfConfig":"49"},{"size":2634,"mtime":1612778695165,"results":"86","hashOfConfig":"49"},{"size":836,"mtime":1612772697565,"results":"87","hashOfConfig":"49"},{"size":721,"mtime":1612893668096,"results":"88","hashOfConfig":"49"},{"size":2704,"mtime":1612811453071,"results":"89","hashOfConfig":"49"},{"size":397,"mtime":1612806557975,"results":"90","hashOfConfig":"49"},{"size":1544,"mtime":1612810650338,"results":"91","hashOfConfig":"49"},{"size":902,"mtime":1612893668093,"results":"92","hashOfConfig":"49"},{"size":290,"mtime":1612894878105,"results":"93","hashOfConfig":"49"},{"size":1155,"mtime":1612963350183,"results":"94","hashOfConfig":"49"},{"size":640,"mtime":1612893835158,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"odjy5u",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"165"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"165"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"165"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"165"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"165"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"165"},"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Video\\Video.jsx",[],["209","210"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Preloader\\Preloader.js",["211"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = () => {\r\nreturn(<img src={preloader} /> )\r\n}\r\n\r\nexport default Preloader;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\index.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\App.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withSuspense.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\NavBar\\NavBar.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\News.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Music\\Music.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Settings\\Settings.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\HeaderContainer.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogsContainer.jsx",["212"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageActionCreator: (newMessageText) => {\r\n            dispatch(actions.sendMessageActionCreator(newMessageText));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileContainer.jsx",["213"],"import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId ){\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} \r\n            profile={this.props.profile} status={this.props.status} \r\n            updateStatus = {this.props.updateStatus} savePhoto ={this.props.savePhoto} />\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }   \r\n        ),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\hoc\\withAuthRedirect.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\object-helpers.js",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Header\\Header.jsx",["214"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://pngimg.com/uploads/circle/circle_PNG50.png' />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                    ? <div>{props.login} <button onClick={props.logout} >Log out</button> </div>\r\n                    : <NavLink className={s.navLink} to=\"/login\" >Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header; ","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\Profile.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\News\\newNews\\newNews.jsx",["215"],"import React from 'react';\r\nimport s from './newNews.module.css';\r\n\r\nconst NewNews = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewNews;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\User.jsx",["216"],"import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport userPhoto from \"../../assets/images/userPhoto.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, ...props}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + user.id}>\r\n                        <img className={s.usersImg} src={user.photos.small != null ? user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { props.unfollow(user.id); }} >\r\n                            Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { props.follow(user.id); }} >\r\n                            Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.city\"}</div>\r\n                    <div>{\"user.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\AddMessageForm.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPostsContainer.jsx",["217"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions} from '../../../redux/profile-reducer';\r\nimport MyPosts from './myPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        //postPhoto: state\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(actions.addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["218"],"import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/userPhoto.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(()=>{\r\n        setEditMode(false)});\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact contactTitle={key} contactValue={profile.contacts[key]} key={key} />\r\n                })}\r\n            </div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contacts}>\r\n            <b>{contactTitle}: {contactValue} </b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\myPosts.jsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Profile\\myPosts\\Post\\Post.jsx",["219"],"import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\n\r\n//###need fix. Upload not just photo but photo from API\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://vjoy.cc/wp-content/uploads/2020/10/prikolnye-avatarki-vk-dlya-parnej_023.jpg\"></img>\r\n            {/*props.postPhoto*/}\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\app-reducer.ts",["220","221","222"],"import { Dispatch } from 'redux';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType, BaseThunkType, InferActionsTypes } from './redux-store';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n    //globalError: null,\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/APP/INITIALIZED_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: \"SN/APP/INITIALIZED_SUCCESS\"} as const)\r\n}\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(actions.initializedSuccess());\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>",["223","224"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\auth-reducer.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\dialogs-reducer.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\profile-reducer.ts",["225"],"import { profileAPI } from '../api/profile-api';\r\nimport { stopSubmit, FormAction } from 'redux-form';\r\nimport {PostsType, ProfilePhotoType, ProfileType} from \"../utils/types\"\r\nimport { BaseThunkType, InferActionsTypes } from './redux-store';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hey, how are you?\", likesCount: 23 },\r\n        { id: 2, message: \"it's my first post\", likesCount: 9 },\r\n        { id: 3, message: \"I'm so boring\", likesCount: 44 },\r\n        { id: 4, message: \"today i do some cool stuff\", likesCount: 53 },\r\n        { id: 5, message: \"Adorable dog\", likesCount: 109 }\r\n    ] as Array<PostsType>, \r\n    profile: null as ProfileType | null,\r\n    status: \"\" as string,\r\n    newPostText: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action:ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NW/PROFILE/ADD-POST\":\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case \"NW/PROFILE/SET-USER-PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case \"NW/PROFILE/SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        case \"NW/PROFILE/SAVE-PHOTO-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n            };\r\n        case \"NW/PROFILE/DELETE-POST\":\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText:string) => ({type: \"NW/PROFILE/ADD-POST\", newPostText} as const),\r\n    setUserProfile: (profile:ProfileType) => ({type: \"NW/PROFILE/SET-USER-PROFILE\", profile} as const),\r\n    setStatus: (status:string) => ({type: \"NW/PROFILE/SET-STATUS\", status} as const),\r\n    deletePost: (postId:number) => ({type: \"NW/PROFILE/DELETE-POST\", postId} as const),\r\n    savePhotoSuccess: (photos:ProfilePhotoType) => ({type: \"NW/PROFILE/SAVE-PHOTO-SUCCESS\", photos} as const)\r\n}\r\n\r\n\r\n\r\n\r\nexport const getStatus = (userId:number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\nexport const updateStatus = (status:string): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file:File):ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile:ProfileType):ThunkType => \r\n    async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        if(userId != null){\r\n        dispatch(getUserProfile(userId));\r\n        } else{\r\n            throw Error(\"userId can't be null\")\r\n        }\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0] }));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n}\r\nexport const getUserProfile = (userId:number):ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\n\r\nexport default profileReducer\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\n\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\sidebar-reducer.ts",["226"],"\r\n\r\nlet initialState = {\r\n};\r\n\r\ntype sidebarReducerActionType = any;\r\nconst sidebarReducer = (state=initialState, action:sidebarReducerActionType) =>{\r\n    return(state);\r\n}\r\n\r\nexport default sidebarReducer\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-reducer.ts",["227"],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\Pagination\\Pagination.tsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\Users.tsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\redux-store.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\redux\\users-selectors.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\api.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Login\\Login.tsx",["228"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (email:string,password:string, rememberMe: boolean, captcha: string ) => void\r\n}\r\n\r\ntype LoginFormOwnPropsType = {captchaUrl: string | null }\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\nexport type LoginFormValuesType = {\r\n    email:string\r\n    password:string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType,string>\r\n\r\n\r\nconst Login: React.FC<PropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            {error && <div className={s.formSummaryError} >\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({ form: 'login' })(LoginForm)\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps,{login})(Login);\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\utils\\validators\\validators.ts",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\components\\Common\\FormsControls\\FormsControls.tsx",[],"D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\auth-api.ts",["229"],"import { AxiosPromise } from 'axios';\r\nimport React from 'react'\r\nimport { instance, ResultCodeEnum, ResultCodeForCaptchaEnum,APIResponseType } from './api';\r\n\r\n\r\n\r\n\r\ntype MeResponseDataType = {\r\n    id:number\r\n    email: string \r\n    login:string\r\n}\r\ntype LoginResponseType = {userId:number}\r\ntype LoginResultCodeType = ResultCodeEnum | ResultCodeForCaptchaEnum\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res=>res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseType, LoginResultCodeType>>(`auth/login`, { email, password, rememberMe, captcha }).then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`) as AxiosPromise<APIResponseType> ;\r\n    },\r\n    }\r\n","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\security-api.ts",["230"],"import React from 'react'\r\nimport {instance} from './api';\r\n\r\n\r\ntype getCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<getCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    },\r\n}","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\profile-api.ts",["231"],"import React from 'react'\r\nimport { instance, APIResponseType } from './api';\r\nimport { ProfilePhotoType, ProfileType } from './../utils/types';\r\n\r\n\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: ProfilePhotoType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>('profile/status/' + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType<Array<string>>>('profile/status/', { status: status }).then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>('profile/photo/', formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }).then(res => res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n    return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n    };","D:\\program_project\\react\\SamuraiWay\\FirstProjest\\way-1\\src\\api\\users-api.ts",["232"],"import { UsersType } from './../utils/types';\r\nimport { instance, GetItemsType, APIResponseType } from './api';\r\nimport React from 'react'\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 1) {\r\n        return instance.get<GetItemsType<Array<UsersType>>>(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(res => res.data);\r\n    },\r\n\r\n    follow(userId:number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n};",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":6,"column":8,"nodeType":"239","endLine":6,"endColumn":31},{"ruleId":"240","severity":1,"message":"241","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":29,"column":43,"nodeType":"246","messageId":"247","endLine":29,"endColumn":45},{"ruleId":"237","severity":1,"message":"238","line":8,"column":13,"nodeType":"239","endLine":8,"endColumn":77},{"ruleId":"237","severity":1,"message":"238","line":7,"column":13,"nodeType":"239","endLine":7,"endColumn":109},{"ruleId":"237","severity":1,"message":"238","line":13,"column":25,"nodeType":"239","endLine":13,"endColumn":119},{"ruleId":"240","severity":1,"message":"241","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":29,"column":17,"nodeType":"239","endLine":29,"endColumn":88},{"ruleId":"237","severity":1,"message":"238","line":10,"column":13,"nodeType":"239","endLine":10,"endColumn":109},{"ruleId":"248","severity":1,"message":"249","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":18},{"ruleId":"248","severity":1,"message":"250","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":22},{"ruleId":"248","severity":1,"message":"251","line":3,"column":24,"nodeType":"242","messageId":"243","endLine":3,"endColumn":37},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"244","severity":1,"message":"245","line":52,"column":53,"nodeType":"246","messageId":"247","endLine":52,"endColumn":55},{"ruleId":"248","severity":1,"message":"252","line":14,"column":6,"nodeType":"242","messageId":"243","endLine":14,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":56,"column":64,"nodeType":"246","messageId":"247","endLine":56,"endColumn":66},{"ruleId":"237","severity":1,"message":"238","line":52,"column":24,"nodeType":"239","endLine":52,"endColumn":48},{"ruleId":"248","severity":1,"message":"241","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"248","severity":1,"message":"241","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"248","severity":1,"message":"241","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"248","severity":1,"message":"241","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","'AppStateType' is defined but never used.","'BaseThunkType' is defined but never used.","'InitialStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]